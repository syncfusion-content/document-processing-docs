@Html.EJS().Spreadsheet("spreadsheet").ShowSheetTabs(false).Created("created").ShowRibbon(false).ShowFormulaBar(false).Sheets(sheet =>
{
    sheet.Ranges(ranges =>
    {
        ranges.DataSource((IEnumerable<object>)ViewBag.DefaultData).StartCell("A2").Add();
  
    }).Columns(column =>
    {
        column.Width(90).Add();
        column.Width(220).Add();
        column.Width(90).Add();
        column.Width(140).Add();
        column.Width(90).Add();
        column.Width(100).Add();
        column.Width(100).Add();
    }).Add();
}).Render()

<script>

    function created() {
        // Cells model that you are going to update in the inserted 5th column dynamically
        var cellsModel = [{ value: 'UnitPrice', style: { fontWeight: 'bold', textAlign: 'center' } }, { value: '18.00' },
        { value: '19.00' }, { value: '10.00' }, { value: '22.00' }, { value: '21.35' }, { value: '25.00' }, { value: '30.00' },
        { value: '21.00' }, { value: '40.00' }, { value: '97.00' }];
        // Applies style formatting before inserting the column
        this.cellFormat({ fontWeight: 'bold', textAlign: 'center' }, 'A2:G2');
        // inserting a empty column at 0th index
        this.insertColumn();
        // inserting 1 column at the 5th index with column model
        this.insertColumn([{ index: 5, width: 90 }]);
        var rowIndex = 1;
        // Updating the 5th column data
        cellsModel.forEach((cell) => {
            this.updateCell(cell, ej.spreadsheet.getCellAddress(rowIndex, 5)); rowIndex++;
        });
        // Applies style formatting after the columns are inserted
        this.cellFormat({ textAlign: 'center' }, 'B3:B12');
        this.cellFormat({ textAlign: 'center' }, 'D3:D12');
        this.cellFormat({ textAlign: 'center' }, 'F3:H12');
    }

</script>