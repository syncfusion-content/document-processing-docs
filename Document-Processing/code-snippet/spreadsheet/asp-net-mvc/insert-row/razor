@Html.EJS().Spreadsheet("spreadsheet").ShowSheetTabs(false).Created("created").ShowRibbon(false).ShowFormulaBar(false).Sheets(sheet =>
{
    sheet.Ranges(ranges =>
    {
        ranges.DataSource((IEnumerable<object>)ViewBag.DefaultData).StartCell("B1").Add();
  
    }).Columns(column =>
    {
        column.Width(20).Add();
        column.Width(90).Add();
        column.Width(220).Add();
        column.Width(90).Add();
        column.Width(140).Add();
        column.Width(90).Add();
        column.Width(100).Add();
        column.Width(100).Add();
    }).Add();
}).Render()

<script>

    function created() {
         // Rows model that is going to insert dynamically
            var rowsModel = [{
                index: 9, // Need to specify the index for the first row collection, the specified rows will be inserted in this index.
                cells: [{ value: '' }, { value: '8' }, { value: 'Northwoods Cranberry Sauce' }, { value: '3' }, { value: '12 - 12 oz jars' },
                { value: '40.00' }, { value: '6' }, { value: 'false' }]
            },
            {
                cells: [{ value: '' }, { value: '9' }, { value: 'Mishi Kobe Niku' }, { value: '4' }, { value: '18 - 500 g pkgs.' }, { value: '97.00' }, { value: '29' }, { value: 'true' }]
            }];
        // Applies style formatting before inserting the rows
        this.cellFormat({ fontWeight: 'bold', textAlign: 'center' }, 'B1:H1');
        // inserting a empty row at 0th index
        this.insertRow();
        // inserting 2 rows at the 9th index with data
        this.insertRow(rowsModel);
        // Applies style formatting after the rows are inserted
        this.cellFormat({ textAlign: 'center' }, 'B3:B12');
        this.cellFormat({ textAlign: 'center' }, 'D3:D12');
        this.cellFormat({ textAlign: 'center' }, 'F3:H12');
    }

</script>